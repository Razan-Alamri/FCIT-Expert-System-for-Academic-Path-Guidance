# -*- coding: utf-8 -*-
"""ExpertSystem-CPCS331.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tyY4qK2ekyq91YzcGiFjaTgvfDh4t4oj
"""

! pip install experta

from experta import *

# The Facts From Our Project
class Path_CS(Fact):
  """Info about the CS Path."""
  pass

class Path_IT(Fact):
  """Info about the IT Path."""
  pass

class Path_IS(Fact):
  """Info about the IS Path."""
  pass

# The Rule From Our Project
class PathKE(KnowledgeEngine):

  # The Ruls for CS major
  @Rule(AND(Path_CS(has=('keeping up with technological advancements & new technologies')), Path_CS(has=('analyzing data & predicting future information')), Path_CS(has=('good background in mathematics and algorithms'))))
  def suggested_Path1(self):
    print("\nThe suggested path for you is Intelligent Systems\n")

  @Rule(AND(Path_CS(has=('analyze complex data')), Path_CS(has=('Knowledge of network protocols')), Path_CS(has=('Knowledge of IoT'))))
  def suggested_Path2(self):
    print("\nThe suggested path for you is Computer Network\n")

  @Rule(AND(Path_CS(has=('Data structures and algorithms')), Path_CS(has=('Object-oriented programming (OOP) languages')), Path_CS(has=('Text editors'))))
  def suggested_Path3(self):
    print("\nThe suggested path for you is Advanced Programming\n")

  # The Ruls for It major
  @Rule(AND(Path_IT(has=('interested in web and mobile application development')), Path_IT(has=('knowledge on database management')), Path_IT(has=('skills in Database Designing'))))
  def suggested_Path4(self):
    print("\nThe suggested path for you is Database\n")

  @Rule(AND(Path_IT(has=('knowledge of system design and implementation')), Path_IT(has=('interest in network support and administration')), Path_IT(has=('knowledge of database systems, website design and management'))))
  def suggested_Path5(self):
    print("\nThe suggested path for you is Integrated IT\n")

  # The Ruls for IS major
  @Rule(AND(Path_IS(has=('the ability to make quick and accurate decisions')), Path_IS(has=('knowledge of data collection and classification')), Path_IS(has=('the ability to make quick and accurate decisions'))))
  def suggested_Path6(self):
    print("\nThe suggested path for you is Decision support systems\n")

  @Rule(AND(Path_IS(has=('communication skills')), Path_IS(has=('interested in data processing')), Path_IS(has=('the ability to make quick and accurate decisions'))))
  def suggested_Path7(self):
    print("\nThe suggested path for you is Development of electronic systems\n")

############################################################################################

# Print Welcome massege
print("-----------------------------------------------------------------------------------")
print("-------                  Welcome to Path Assistant At FCIT                  -------")
print("-----------------------------------------------------------------------------------")

# Loop to run the program until the user stops it 
Start = 'yes'


while Start == 'yes':
  major = input("\nWhat is your university major (CS / IT / IS)? ").lower()
  print("")
  #match major:
  if(major=="cs"):
  
    #case 'CS':
        # For Intelligent Systems Path
        Answer = input("Do you have interest in ‚Äèkeeping up with technological advancements and new technologies (yes / no)? ").lower()
        if Answer == 'yes' :
          Answer = input("Do you have interest in analyzing data & predicting future information (yes / no)? ").lower()
          if Answer  == 'yes' :
             Answer = input("Do you have a good background in mathematics and algorithms (yes / no)? ").lower()
             if Answer == 'yes' :
               engine = PathKE()
               engine.reset()
               engine.declare(Path_CS(has='keeping up with technological advancements & new technologies'), Path_CS(has='analyzing data & predicting future information'), Path_CS(has='good background in mathematics and algorithms'))
               engine.run()
               Start = input("Do you want to start again (yes / no)? ").lower()
               # If user want to start again
               if(Start == 'no'):
                 break
               elif(Start == 'yes'):
                 continue

        # For Computer Network Path
        Answer = input("Do you have analytical skills (the ability to analyze complex data) (yes / no)? ").lower()
        if Answer == 'yes' :
          Answer = input("Do you have Knowledge of network protocols (yes / no)? ").lower()
          if Answer  == 'yes' :
             Answer = input("Do you have Knowledge of IoT (Internet Of Things) (yes / no)? ").lower()
             if Answer == 'yes' :
               engine = PathKE()
               engine.reset()
               engine.declare(Path_CS(has='analyze complex data'), Path_CS(has='Knowledge of network protocols'), Path_CS(has='Knowledge of IoT'))
               engine.run()
               # If user want to start again
               Start = input("Do you want to start again (yes / no)? ").lower()
               if(Start == 'no'):
                 break
               elif(Start == 'yes'):
                 continue

        # For Advanced Programming Path
        Answer = input("Do you have knowledge of data structures and algorithms (yes / no)? ").lower()
        if Answer == 'yes' :
          Answer = input("Do you have skills in Object-oriented programming (OOP) languages (yes / no)? ").lower()
          if Answer  == 'yes' :
             Answer = input("Do you have interest in text editors (editors include: Visual Studio Code Sublime Text) (yes / no)? ").lower()
             if Answer == 'yes' :
               engine = PathKE()
               engine.reset()
               engine.declare(Path_CS(has='Data structures and algorithms'), Path_CS(has='Object-oriented programming (OOP) languages'), Path_CS(has='Text editors'))
               engine.run()
               # If user want to start agin
               Start = input("Do you want to start again (yes / no)? ").lower()
               if(Start == 'no'):
                 break
               elif(Start == 'yes'):
                 continue

        # If no match with any path
        if Answer == 'no' :
          print("\nSorry, there's no match with any path")
          # If user want to start again
          Start = input("Do you want to start again (yes / no)? ").lower()
          if(Start == 'no'):
            break
          elif(Start == 'yes'):
            continue   

        print("")

#===================================================================================================
  elif(major=="it"):
    #case 'IT':

        # For Database Path
        Answer = input("Do you have an interest in web and mobile application development (yes / no)? ").lower()
        if Answer == 'yes' :
          Answer = input("Do you have knowledge on database management system such as (My SQL, Oracle and Microsoft Access) (yes / no)? ").lower()
          if Answer  == 'yes' :
             Answer = input("Do you have skills in Database Designing (yes / no)? ").lower()
             if Answer == 'yes' :
               engine = PathKE()
               engine.reset()
               engine.declare(Path_IT(has='interested in web and mobile application development'), Path_IT(has='knowledge on database management'), Path_IT(has='skills in Database Designing'))
               engine.run()
               # If user want to start again
               Start = input("Do you want to start again (yes / no)? ").lower()
               if(Start == 'no'):
                 break
               elif(Start == 'yes'):
                 continue

        # For Integrated IT Path
        Answer = input("Do you have knowledge of system design and implementation (yes / no)? ").lower()
        if Answer == 'yes' :
          Answer = input("Do you have an interest in network support and administration (yes / no)? ").lower()
          if Answer  == 'yes' :
             Answer = input("Do you have knowledge of database systems, website design and management (yes / no)? ").lower() 
             if Answer == 'yes' :
               engine = PathKE()
               engine.reset()
               engine.declare(Path_IT(has='knowledge of system design and implementation'), Path_IT(has='interest in network support and administration'), Path_IT(has='knowledge of database systems, website design and management'))
               engine.run()
               # If user want to start again
               Start = input("Do you want to start again (yes / no)? ").lower()
               if(Start == 'no'):
                 break
               elif(Start == 'yes'):
                 continue

        # If no match with any path
        if Answer == 'no' :
           print("\nSorry, there's no match with any path")
           # If user want to start again
           Start = input("Do you want to start again (yes / no)? ").lower()
           if(Start == 'no'):
             break
           elif(Start == 'yes'):
             continue

        print("")

#===================================================================================================
  elif(major=="is"):
    #case 'IS':

        # For Decision support systems Path
        Answer = input("Do you have the ability to analyze deep data by using (Models, diagrams, and Maps) (yes / no)? ").lower()
        if Answer == 'yes' :
          Answer = input("Do you have Knowledge of data collection and classification (yes / no)? ").lower()
          if Answer  == 'yes' :
             Answer = input("Do you have the ability to make quick and accurate decisions (yes / no)? ").lower()
             if Answer == 'yes' :
               engine = PathKE()
               engine.reset()
               engine.declare(Path_IS(has='the ability to make quick and accurate decisions'), Path_IS(has='knowledge of data collection and classification'), Path_IS(has='the ability to make quick and accurate decisions'))
               engine.run()
               # If user want to start again
               Start = input("Do you want to start again (yes / no)? ").lower()
               if(Start == 'no'):
                 break
               elif(Start == 'yes'):
                 continue

        # For Development of electronic systems Path
        Answer = input("Do you have communication skills (yes / no)? ").lower()
        if Answer == 'yes' :
          Answer = input("Do you have an interest in data processing (yes / no)? ").lower()
          if Answer  == 'yes' :
             Answer = input("Do you have the ability to make quick and accurate decisions (yes / no)? ").lower()
             if Answer == 'yes' :
               engine = PathKE()
               engine.reset()
               engine.declare(Path_IS(has='communication skills'), Path_IS(has='interested in data processing'), Path_IS(has='the ability to make quick and accurate decisions'))
               engine.run()
               # If user want to start again
               Start = input("Do you want to start again (yes / no)? ").lower()
               if(Start == 'no'):
                 break
               elif(Start == 'yes'):
                 continue

        # If no match with any path
        if Answer == 'no' :
           print("\nSorry, there's no match with any path")
           # If user want to start again
           Start = input("Do you want to start again (yes / no)? ").lower()
           if(Start == 'no'):
             break
           elif(Start == 'yes'):
             continue

        print("")

#===================================================================================================
  else:
    #case default:

        print("Sorry, our system does not support this major")
        # If user want to start again
        Start = input("Do you want to start again (yes / no)? ").lower()
        if(Start == 'no'):
          break
        elif(Start == 'yes'):
          continue

#####################################

#####################################

# Print Close massege
print("\n-----------------------------------------------------------------------------------")
print("-------             Thank You For Using Our System, Good Bye                -------")
print("-----------------------------------------------------------------------------------")